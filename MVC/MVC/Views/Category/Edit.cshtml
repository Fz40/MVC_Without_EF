@model MVC.Models.CategoryModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPopup.cshtml";
}

<h2>Edit</h2>

@using (@Html.BeginForm("Edit", "Category", FormMethod.Post,
 new { id = "Form1", @class = "form-horizontal needs-validation ", @novalidate = "" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" id="btnSave" class="btn btn-outline-success" />
            <a class="btn btn-outline-danger" href="javascript:parent.jQuery.fancybox.close();"
               style="cursor: pointer; text-decoration: none; ">Close</a>
        </div>
    </div>
</div>
}

@section Scripts{

    <script type="text/javascript">

                    $(document).ready(function () {
                        // function เช็ค validation เมื่อกด submit
                        (function () {
                            'use strict';
                            window.addEventListener('load', function () {
                                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                                var forms = document.getElementsByClassName('needs-validation');
                                // Loop over them and prevent submission
                                var validation = Array.prototype.filter.call(forms, function (form) {
                                    form.addEventListener('submit', function (event) {
                                        if (form.checkValidity() === false) {
                                            event.preventDefault();
                                            event.stopPropagation();
                                        }
                                        form.classList.add('was-validated');
                                    }, false);
                                });
                            }, false);
                        })();


                    });




    </script>
}
